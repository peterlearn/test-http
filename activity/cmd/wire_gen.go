// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2"
	"x-server/activity/internal/server"
	"x-server/activity/internal/service"
)

// Injectors from wire.go:

//	func initApp() (*kratos.App, func(), error) {
//		panic(wire.Build(dao.ProviderSet, service.ProviderSet, coredao.ProviderSet, server.ProviderSet, newApp))
//	}
func initApp() (*kratos.App, func(), error) {
	serviceService, cleanup, err := service.New()
	if err != nil {
		return nil, nil, err
	}
	httpServer, err := server.NewHTTPServer(serviceService)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	grpcServer, err := server.NewGRPCServer(serviceService)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	app, cleanup2 := newApp(httpServer, grpcServer)
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
